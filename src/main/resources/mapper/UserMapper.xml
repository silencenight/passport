<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.silence.passport.mapper.UserMapper">
    <sql id="BASE_TABLE">
        sys_user
    </sql>
    <sql id="BASE_COLUMN">
        id,login_name,passwd,full_name,phone,email,pic
    </sql>

    <!--因为数据库中表的字段与对象的字段不一致，所以需要转换匹配-->
    <resultMap id="BaseResultMap" type="com.silence.passport.entity.User">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="login_name" property="loginName" jdbcType="VARCHAR"/>
        <result column="passwd" property="passwd" jdbcType="VARCHAR"/>
        <result column="full_name" property="fullName" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="pic" property="pic" jdbcType="VARCHAR"/>
        <result column="create_user" property="createUser" jdbcType="VARCHAR"/>
    </resultMap>

    <insert id="add" parameterType="com.silence.passport.entity.User">
        INSERT INTO sys_user (id,login_name,passwd,full_name,phone,email,pic,create_user)
        VALUES (#{id,jdbcType=VARCHAR},#{loginName,jdbcType=VARCHAR},#{passwd,jdbcType=VARCHAR},#{fullName,jdbcType=VARCHAR},#{phone,jdbcType=VARCHAR},#{email,jdbcType=VARCHAR},#{pic,jdbcType=VARCHAR},#{createUser,jdbcType=VARCHAR})
    </insert>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        DELETE FROM sys_user
        WHERE id = #{id}
    </delete>

    <update id="updateByPrimaryKey" parameterType="com.silence.passport.entity.User">
        UPDATE sys_user
        SET login_name = #{loginName,jdbcType=VARCHAR},passwd = #{passwd,jdbcType=VARCHAR},full_name = #{fullName,jdbcType=VARCHAR},phone = #{phone,jdbcType=VARCHAR},email = #{email,jdbcType=VARCHAR},pic = #{pic,jdbcType=VARCHAR},create_user = #{createUser,jdbcType=VARCHAR}
        WHERE id = #{id}
    </update>

    <!--resultMap是将返回的结果进行mapping匹配，如果数据库的表和对象的字段一致，可以使用resultType="User"直接返回-->
    <select id="findAll" resultMap="BaseResultMap">
        SELECT
        <include refid="BASE_COLUMN"/>
        FROM
        <include refid="BASE_TABLE"/>
    </select>

    <select id="findByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        <include refid="BASE_COLUMN"/>
        FROM
        <include refid="BASE_TABLE"/>
        WHERE id = #{id}
    </select>

</mapper>